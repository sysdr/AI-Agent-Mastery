#!/bin/bash

echo "ðŸŽ¬ Enterprise Chat Agent Demo"
echo ""
echo "This demo showcases:"
echo "â€¢ Multi-tenant WebSocket connections with authentication"
echo "â€¢ Real-time chat with AI responses (Gemini API integration)"
echo "â€¢ Tenant isolation and quota management"
echo "â€¢ Enterprise SSO simulation"
echo "â€¢ Real-time context synchronization"
echo ""
echo "Demo Steps:"
echo "1. Open http://localhost:3000"
echo "2. Select organization (Acme Corp or TechStart Inc)"
echo "3. Choose user type and sign in via SSO"
echo "4. Start chatting with the AI assistant"
echo "5. Open multiple browser tabs to see multi-user sync"
echo "6. Check different tenant isolation by switching organizations"
echo ""
echo "Monitor the backend logs to see:"
echo "â€¢ WebSocket connections and tenant isolation"
echo "â€¢ Message processing and quota enforcement"
echo "â€¢ Real-time context synchronization events"
echo ""
echo "API endpoints to test:"
echo "â€¢ GET http://localhost:8000/health - Health check"
echo "â€¢ GET http://localhost:8000/tenant/info - Tenant information (requires auth)"
echo "â€¢ POST http://localhost:8000/conversations - Create conversation (requires auth)"
echo ""
echo "For production deployment:"
echo "â€¢ Configure real SSO provider (SAML/OIDC)"
echo "â€¢ Set up proper SSL certificates"
echo "â€¢ Configure load balancing for WebSocket scaling"
echo "â€¢ Implement comprehensive monitoring and logging"
